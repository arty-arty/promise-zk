[package]
name = "ark-serializer"
version = "0.1.0"
authors = ["Arthem <very@secret.org>"]
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
#getrandom = { git = "https://github.com/rust-random/getrandom/", tag="v0.2.8", features = ["js"]}
getrandom = { version = "0.2.8", features = ["js"] }
wasm-bindgen = "0.2.63"
ark-ec = { version = "0.4.1", features = ["parallel"]}
ark-ff = { version = "0.4.1", features = ["asm", "parallel"]}
ark-bls12-381 = "0.4.0"
ark-bn254 = "0.4.0"
ark-groth16 = "0.4.0"
ark-serialize = { version = "0.4.1", features = ["derive"] }
ark-test-curves = "0.4.0"
hex = "0.4.3"
num-bigint = "0.4.3"
serde_json = "1.0.94"
serde = {version = "1.0", features = ["derive"]}
serde-wasm-bindgen = "0.4"
fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "84fd7c7428c5f59185aecc56a2e0a006e8e07de1" }
fastcrypto-zkp = { git = "https://github.com/MystenLabs/fastcrypto", rev = "84fd7c7428c5f59185aecc56a2e0a006e8e07de1", package = "fastcrypto-zkp" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.dev]
opt-level = 1
incremental = true

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

